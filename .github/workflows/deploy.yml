name: Deploy Next.js to Hostinger
on:
  push:
    branches:
      - main 

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci
      
      # Create .htaccess file for the build output
      - name: Create .htaccess file
        run: |
          cat > .htaccess << 'EOL'
          # .htaccess file for Next.js static site
          <IfModule mod_rewrite.c>
            RewriteEngine On
            RewriteBase /
            
            # Handle trailing slashes
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteRule ^(.*[^/])$ /$1/ [L,R=301]
          
            # Handle client-side routing
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteRule ^(.*)$ /index.html [L]
          </IfModule>
          
          # Prevent directory listing
          Options -Indexes
          
          # Set default document
          DirectoryIndex index.html
          
          # Allow access to all files
          <FilesMatch ".*">
            Order Allow,Deny
            Allow from all
          </FilesMatch>
          EOL
      
      - name: Build Next.js
        run: |
          # Apply environment variables to the build
          export BASE_PATH="${{ secrets.BASE_PATH || '' }}"
          export URL="${{ secrets.NEXT_PUBLIC_URL || '' }}"
          npm run build
      
      - name: Copy .htaccess to build output
        run: |
          cp .htaccess ./out/
      
      - name: Deploy to Hostinger via SSH
        uses: easingthemes/ssh-deploy@v4.1.8
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: "out/"  # Next.js build output directory
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          REMOTE_PORT: ${{ secrets.SSH_PORT || '65002' }}
          REMOTE_USER: ${{ secrets.SSH_USERNAME }}
          TARGET: ${{ secrets.SSH_TARGET_DIR }}
          EXCLUDE: "node_modules/, .git/, .github/"
          ARGS: "-rltgoDzvO --delete"  # Add --delete to remove old files
      
      - name: Fix Permissions
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT || '65002' }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.SSH_TARGET_DIR }}
            find . -type d -exec chmod 755 {} \;
            find . -type f -exec chmod 644 {} \;
            echo "Deployment complete and permissions fixed!"