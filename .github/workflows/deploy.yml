name: Deploy Next.js to Hostinger
on:
  push:
    branches:
      - main 

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci
      
      # Create .htaccess file for the build output
      - name: Create .htaccess file
        run: |
          cat > .htaccess << 'EOL'
          # .htaccess file for Next.js static site
          <IfModule mod_rewrite.c>
            RewriteEngine On
            RewriteBase /
            
            # Handle trailing slashes
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteRule ^(.*[^/])$ /$1/ [L,R=301]
          
            # Handle client-side routing
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteRule ^(.*)$ /index.html [L]
          </IfModule>
          
          # Prevent directory listing
          Options -Indexes
          
          # Set default document
          DirectoryIndex index.html
          
          # Allow access to all files
          <FilesMatch ".*">
            Order Allow,Deny
            Allow from all
          </FilesMatch>
          EOL
      
      - name: Build Next.js
        run: |
          npm run build
      
      - name: Copy .htaccess to build output
        run: |
          cp .htaccess ./out/
      
      # VERY Detailed Debug - Check values carefully without exposing secrets
      - name: Super Detailed Debug
        run: |
          echo "REMOTE_HOST exists: ${{ secrets.SSH_HOST != '' }}"
          echo "REMOTE_USER exists: ${{ secrets.SSH_USERNAME != '' }}"
          echo "Length of REMOTE_HOST: ${{ length(secrets.SSH_HOST) }}"
          echo "Length of REMOTE_USER: ${{ length(secrets.SSH_USERNAME) }}"
          # Try hardcoding values in environment variables
          echo "REMOTE_HOST=82.25.96.67" >> $GITHUB_ENV
          echo "REMOTE_USER=u995357878" >> $GITHUB_ENV
          echo "REMOTE_PORT=65002" >> $GITHUB_ENV

      # Try with simplified approach
      - name: Deploy to Hostinger via SSH (Simple Approach)
        run: |
          # Install SSH client
          sudo apt-get update && sudo apt-get install -y openssh-client
          
          # Write SSH private key to a file
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Add server to known hosts
          ssh-keyscan -p 65002 -H 82.25.96.67 >> ~/.ssh/known_hosts
          
          # Create a script to run the deployment
          echo "rsync -avz -e 'ssh -p 65002' ./out/ u995357878@82.25.96.67:${{ secrets.SSH_TARGET_DIR }}" > deploy.sh
          
          # Execute the deployment script
          bash deploy.sh
      
      # Alternative approach - let's try another GitHub action for SSH deployment
      - name: Deploy via SamKirkland SSH Action
        if: ${{ always() }}  # Run even if previous step fails
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.SSH_HOST || '82.25.96.67' }}
          username: ${{ secrets.SSH_USERNAME || 'u995357878' }}
          password: ${{ secrets.SSH_PASSWORD || 'Cyrix10$' }}
          local-dir: ./out/
          server-dir: ${{ secrets.SSH_TARGET_DIR || '/home/u995357878/domains/cyrixtechsolutions.com/public_html/' }}
      
      - name: Fallback - SSH Connection Test
        if: ${{ always() }}  # Run even if previous steps fail
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 82.25.96.67  # Hardcoded for testing
          port: 65002        # Hardcoded for testing
          username: u995357878  # Hardcoded for testing
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "SSH Connection successful!"
            echo "Current directory: $(pwd)"
            echo "Target directory exists: $(test -d /home/u995357878/domains/cyrixtechsolutions.com/public_html/ && echo 'Yes' || echo 'No')"